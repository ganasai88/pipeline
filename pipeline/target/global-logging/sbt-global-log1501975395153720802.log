[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.0 (Oracle Corporation Java 22.0.1)
[debug] Load.defaultLoad until apply took 179.1892ms
[debug]           Load.loadUnit: plugins took 112.2192ms
[debug]           Load.loadUnit: defsScala took 0.4577ms
[debug] [Loading] Scanning directory C:\Users\ganas\NewScala\pipeline\project
[debug]             Load.loadUnit: mkEval took 9.6712ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ganas\NewScala\pipeline\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 29.0148 ms
[info] loading settings for project pipeline-build from plugins.sbt ...
[debug]               Load.resolveProject(pipeline-build) took 45.1537ms
[debug]             Load.loadTransitive: finalizeProject(Project(id pipeline-build, base: C:\Users\ganas\NewScala\pipeline\project, plugins: List(<none>))) took 99.3755ms
[debug] [Loading] Done in C:\Users\ganas\NewScala\pipeline\project, returning: (pipeline-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 502.8196ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.372ms
[debug]         Load.loadUnit(file:/C:/Users/ganas/NewScala/pipeline/project/, ...) took 630.7253ms
[debug]       Load.apply: load took 765.7386ms
[debug]       Load.apply: resolveProjects took 4.3545ms
[debug]       Load.apply: finalTransforms took 64.7704ms
[debug]       Load.apply: config.delegates took 14.0676ms
[debug]       Load.apply: Def.make(settings)... took 468.7283ms
[debug]       Load.apply: structureIndex took 105.7735ms
[debug]       Load.apply: mkStreams took 3.2482ms
[info] loading project definition from C:\Users\ganas\NewScala\pipeline\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2295.227ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\ganas\NewScala\pipeline
[debug]       Load.loadUnit: mkEval took 0.2144ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtide.ConfigPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8823 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.6951ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ganas\NewScala\pipeline, plugins: List(<none>))) took 5.9535ms
[debug] [Loading] Done in C:\Users\ganas\NewScala\pipeline, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 72.5287ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.9614ms
[debug]   Load.loadUnit(file:/C:/Users/ganas/NewScala/pipeline/, ...) took 2378.1094ms
[debug] Load.apply: load took 2423.0838ms
[debug] Load.apply: resolveProjects took 0.1535ms
[debug] Load.apply: finalTransforms took 12.9026ms
[debug] Load.apply: config.delegates took 0.3595ms
[debug] Load.apply: Def.make(settings)... took 77.9412ms
[debug] Load.apply: structureIndex took 37.9917ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to pipeline (in build file:/C:/Users/ganas/NewScala/pipeline/)
[warn] there's a key that's not used by any other settings/tasks:
[warn]  
[warn] * root / idePackagePrefix
[warn]   +- C:\Users\ganas\NewScala\pipeline\build.sbt:8
[warn]  
[warn] note: a setting might still be used by a command; to exclude a key from this `lintUnused` check
[warn] either append it to `Global / excludeLintKeys` or call .withRank(KeyRanks.Invisible) on the key
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] 
[info] Here are some highlights of sbt 1.10.0:
[info]   - SIP-51 support for Scala 2.13 evolution
[info]   - Various Zinc fixes
[info]   - ConsistentAnalysisFormat: new Zinc Analysis serialization
[info]   - CommandProgress API
[info] See https://eed3si9n.com/sbt-1.10.0 for full release notes.
[info] Hide the banner for this release by running `skipBanner`.
[info] sbt server started at local:sbt-server-f5337fb872b1d82ff059
[debug] Writing bsp connection file
[info] started sbt server
